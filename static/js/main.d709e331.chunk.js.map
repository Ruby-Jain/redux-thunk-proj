{"version":3,"sources":["redux/constansts/userConstants.js","store.js","redux/reducers/userReducer.js","components/User.js","App.js","redux/actions/userAction.js","reportWebVitals.js","index.js"],"names":["GET_USERS_REQUEST","GET_USERS_SUCCESS","GET_USERS_FAIL","rootReducer","combineReducers","userList","state","users","action","type","loading","payload","error","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","User","className","border","map","user","id","name","username","email","phone","website","App","dispatch","useDispatch","useSelector","useEffect","a","axios","get","data","response","message","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAAaA,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,kBCGxBC,EAAcC,0BAAgB,CAClCC,SCDyB,WAAoC,IAAnCC,EAAkC,uDAA1B,CAAEC,MAAO,IAAMC,EAAW,uCAC5D,OAAQA,EAAOC,MACb,KAAKT,EACH,MAAO,CAAEU,SAAS,EAAMH,MAAO,IAEjC,KAAKN,EACH,MAAO,CAAES,SAAS,EAAOH,MAAOC,EAAOG,SAEzC,KAAKT,EACH,MAAO,CAAEQ,SAAS,EAAOE,MAAOJ,EAAOG,SAEzC,QACE,OAAOL,MDNPO,EAAa,CAACC,KAQLC,EANDC,sBACZb,EALkB,GAOlBc,8BAAoBC,kBAAe,WAAf,EAAmBL,K,sCEmB1BM,EA/BF,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACd,OACE,qBAAKa,UAAU,YAAf,SACE,wBAAOA,UAAU,GAAGC,OAAO,IAA3B,UACE,gCACE,+BACE,oCACA,sCACA,0CACA,uCACA,uCACA,8CAGHd,EAAMe,KAAI,SAACC,GAAD,OACT,gCACE,+BACE,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,WACV,6BAAKH,EAAKI,QACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,wB,0DCMTC,MAxBf,WACE,IAAMC,EAAWC,cACX3B,EAAW4B,aAAY,SAAC3B,GAAD,OAAWA,EAAMD,YACtCK,EAA0BL,EAA1BK,QAASH,EAAiBF,EAAjBE,MAAOK,EAAUP,EAAVO,MAIxB,OAHAsB,qBAAU,WACRH,ECNsB,uCAAM,WAAOA,GAAP,iBAAAI,EAAA,sEAE5BJ,EAAS,CAAEtB,KAAMT,IAFW,SAGLoC,IAAMC,IAC3B,8CAJ0B,gBAGpBC,EAHoB,EAGpBA,KAGRP,EAAS,CAAEtB,KAAMR,EAAmBU,QAAS2B,IANjB,gDAQ5BP,EAAS,CACPtB,KAAMP,EACNS,QACE,KAAM2B,MAAQ,KAAMC,SAASD,KAAKE,QAC9B,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAbc,yDAAN,yDDOrB,CAACT,IAEF,sBAAKX,UAAU,MAAf,UACE,iDAAwB,uBACxB,+DAAsC,uBACtC,cAACqB,EAAA,EAAD,IAEC/B,EACC,8CACEE,EACF,6BAAKA,IAEL,cAAC,EAAD,CAAML,MAAOA,QEdNmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAD,CAAUrC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFsC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d709e331.chunk.js","sourcesContent":["export const GET_USERS_REQUEST = \"GET_USERS_REQUEST\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_FAIL = \"GET_USERS_FAIL \";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userReducer } from \"./redux/reducers/userReducer\";\n\nconst rootReducer = combineReducers({\n  userList: userReducer,\n});\n\nconst intialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  intialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  GET_USERS_REQUEST,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n} from \"../constansts/userConstants\";\nexport const userReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case GET_USERS_REQUEST:\n      return { loading: true, users: [] };\n\n    case GET_USERS_SUCCESS:\n      return { loading: false, users: action.payload };\n\n    case GET_USERS_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport \"./User.css\"\n\n\nconst User = ({ users }) => {\n  return (\n    <div className=\"container\">\n      <table className=\"\" border=\"5\">\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Website</th>\n          </tr>\n        </thead>\n        {users.map((user) => (\n          <tbody>\n            <tr>\n              <td>{user.id}</td>\n              <td>{user.name}</td>\n              <td>{user.username}</td>\n              <td>{user.email}</td>\n              <td>{user.phone}</td>\n              <td>{user.website}</td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default User;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport User from \"./components/User\";\nimport \"./App.css\"\nimport LinearProgress from '@mui/material/LinearProgress';\n\nimport { userAction } from \"./redux/actions/userAction\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userList);\n  const { loading, users, error } = userList;\n  useEffect(() => {\n    dispatch(userAction());\n  }, [dispatch]);\n  return (\n    <div className=\"App\">\n      <h1>REDUX THUNK APP</h1><br/>\n      <h2>FETCHED DATA OF ALL THE USERS</h2><br />\n      <LinearProgress />\n      \n      {loading ? (\n        <h2>Loading ....</h2>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n        <User users={users} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\nimport {\n  GET_USERS_REQUEST,\n  GET_USERS_SUCCESS,\n  GET_USERS_FAIL,\n} from \"../constansts/userConstants\";\n\nexport const userAction = () => async (dispatch) => {\n  try {\n    dispatch({ type: GET_USERS_REQUEST });\n    const { data } = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n    dispatch({ type: GET_USERS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: GET_USERS_FAIL,\n      payload:\n        error.data && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}